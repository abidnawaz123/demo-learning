{"ast":null,"code":"var _jsxFileName = \"/home/abid/Projects/learning/src/components/pages/Todos/MainComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Button, Card, Grid, Input, Paper, Typography, styled } from '@mui/material';\nimport { addTodo } from '../../../redux/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MainComponent = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [task, setTask] = useState(\"\");\n  const todos = useSelector(state => state.todos);\n  const handleAddTask = () => {\n    dispatch(addTodo(task));\n  };\n  const addedItemsStyle = {\n    backgroundColor: \"#1A2027\",\n    color: \"white\",\n    padding: '20px',\n    borderRadius: '5px'\n  };\n  const mainheadingStyle = {\n    textAlign: 'center',\n    marginBottom: '20px',\n    backgroundColor: '#1A2027'\n  };\n  const inputContainer = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: \"25px\"\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: mainheadingStyle,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"white\",\n        children: \"HEADING LEADS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: inputContainer,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          style: {\n            backgroundColor: 'darkgoldenrod'\n          },\n          onChange: event => {\n            setTask(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"small\",\n          onClick: handleAddTask,\n          children: \"add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          spacing: 3,\n          children: todos.length ? todos.map((item, ind) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                style: addedItemsStyle,\n                children: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 41\n              }, this)\n            }, ind, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this)) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(MainComponent, \"lOzqYEk0i/naLI3vTDj1+t8bVFY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = MainComponent;\nexport default MainComponent;\nvar _c;\n$RefreshReg$(_c, \"MainComponent\");","map":{"version":3,"names":["React","useState","Box","Button","Card","Grid","Input","Paper","Typography","styled","addTodo","useDispatch","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","MainComponent","_s","dispatch","task","setTask","todos","state","handleAddTask","addedItemsStyle","backgroundColor","color","padding","borderRadius","mainheadingStyle","textAlign","marginBottom","inputContainer","display","alignItems","justifyContent","children","style","variant","fileName","_jsxFileName","lineNumber","columnNumber","sx","type","onChange","event","target","value","size","onClick","flexGrow","container","spacing","item","length","map","ind","xs","_c","$RefreshReg$"],"sources":["/home/abid/Projects/learning/src/components/pages/Todos/MainComponent.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Box, Button, Card, Grid, Input, Paper, Typography, styled } from '@mui/material'\nimport { addTodo } from '../../../redux/actions'\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst MainComponent = () => {\n    const dispatch = useDispatch()\n    const [task, setTask] = useState(\"\")\n    const todos = useSelector(state => state.todos)\n    const handleAddTask = () => {\n        dispatch(addTodo(task))\n    }\n    const addedItemsStyle = {\n        backgroundColor: \"#1A2027\",\n        color: \"white\",\n        padding: '20px',\n        borderRadius: '5px',\n    }\n    const mainheadingStyle = {\n        textAlign: 'center',\n        marginBottom: '20px',\n        backgroundColor: '#1A2027'\n    }\n    const inputContainer = {\n        display:\"flex\",\n        alignItems: \"center\",\n        justifyContent:\"center\",\n        borderRadius:\"25px\"\n    }\n    return (\n        <>\n            <div style={mainheadingStyle}>\n                <Typography variant='body1' color={\"white\"}>\n                    HEADING LEADS\n                </Typography>\n                <Box sx={inputContainer}>\n                    <Input type='text' style={{ backgroundColor: 'darkgoldenrod' }}\n                        onChange={(event) => { setTask(event.target.value) }}\n                    />\n                    <Button variant='contained'\n                        size='small'\n                        onClick={handleAddTask}\n                    >\n                        add Task\n                    </Button>\n                </Box>\n            </div>\n            <Box sx={{ flexGrow: 1 }}>\n                <Grid container spacing={1}>\n                    <Grid container item spacing={3}>\n                        {\n                            todos.length ? todos.map((item, ind) => (\n                                <React.Fragment>\n                                    <Grid item xs={4} key={ind}>\n                                        <Typography style={addedItemsStyle}>\n                                            {item}\n                                        </Typography>\n                                    </Grid>\n                                </React.Fragment>\n                            )) : null\n                        }\n                    </Grid>\n                </Grid>\n            </Box>\n        </>\n    )\n}\n\nexport default MainComponent\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}